{"version":3,"sources":["tst-frontend.min.js"],"names":["tst","jQuery","document","on","$","adjustBackgroundImages","tstLoadedImages","imageElements","id","each","$this","this","backgroundImage","css","attr","push","element","url","type","src","image","i","urls","length","j","imageElement","found","indexOf","decodeURIComponent","e","x","focusPointX","y","focusPointY"],"mappings":"AAGA,IAAIA,IAAMA,KAAO,GAEjBC,OAAOC,UAAUC,GAAG,QAAS,WACzB,IAAIC,EAAIH,OACRD,IAAIK,uBAAyB,SAAUC,GAEnC,IAAIC,EAAgB,GAwCpB,IAAK,IAAIC,KAvCTJ,EAAE,KAAKK,KAAK,WACR,IAAIC,EAAQN,EAAEO,MACVC,EAAkBF,EAAMG,IAAI,mBAG3BD,GAAuC,SAApBA,IACpBA,EAAkBF,EAAMI,KAAK,iBAI5BF,GAAmD,UAAhCF,EAAMG,IAAI,mBAIlCN,EAAcQ,KAAK,CACfC,QAASN,EACTO,IAAKL,EACLM,KAAM,iBAKdd,EAAE,OAAOK,KAAK,WACV,IAAIC,EAAQN,EAAEO,MACVQ,EAAMT,EAAMI,KAAK,OAGhBK,GAAoC,UAA7Bf,EAAEO,MAAME,IAAI,cAIxBN,EAAcQ,KAAK,CACfC,QAASN,EACTO,IAAKE,EACLD,KAAM,YAKCZ,EAIX,IAHA,IAAIc,EAAQd,EAAgBE,GAGnBa,EAAI,EAAGA,EAAID,EAAME,KAAKC,OAAQF,IAInC,IAHA,IAAIJ,EAAMG,EAAME,KAAKD,GAGZG,EAAI,EAAGA,EAAIjB,EAAcgB,OAAQC,IAAK,CAC3C,IAAIC,EAAelB,EAAciB,GAG7BE,GAA2C,IAAnCD,EAAaR,IAAIU,QAAQV,GAGrC,IAAKS,EACD,KAC+D,IAAvDE,mBAAmBH,EAAaR,KAAKU,QAAQV,KAC7CS,GAAQ,GAEd,MAAOG,IAIb,GAAIH,EAAO,CACP,IAAII,EAAwB,IAApBV,EAAMW,YAAoB,IAC9BC,EAAwB,IAApBZ,EAAMa,YAAoB,IAER,eAAtBR,EAAaP,KACbO,EAAaT,QACRH,IAAI,wBAAyBiB,GAC7BjB,IAAI,wBAAyBmB,GACL,UAAtBP,EAAaP,MACpBO,EAAaT,QAAQH,IAAI,kBAAmBiB,EAAI,IAAME,MAQ/C,oBAApB1B,iBACPN,IAAIK,uBAAuBC","file":"../tst-frontend.min.js","sourcesContent":["/*\n * Copyright 2012-2024, Theia Smart Thumbnails, WeCodePixels, https://wecodepixels.com\n */\nvar tst = tst || {};\n\njQuery(document).on('ready', function () {\n    var $ = jQuery;\n    tst.adjustBackgroundImages = function (tstLoadedImages) {\n        // Index background images.\n        var imageElements = [];\n        $('*').each(function () {\n            var $this = $(this);\n            var backgroundImage = $this.css('backgroundImage');\n\n            // Fix for avia-slideshow.\n            if (!backgroundImage || backgroundImage === 'none') {\n                backgroundImage = $this.attr('data-img-url');\n            }\n\n            // Only applies to cover images.\n            if (!backgroundImage || $this.css('backgroundSize') !== 'cover') {\n                return;\n            }\n\n            imageElements.push({\n                element: $this,\n                url: backgroundImage,\n                type: 'background',\n            });\n        });\n\n        // Index image tags.\n        $('img').each(function () {\n            var $this = $(this);\n            var src = $this.attr('src');\n\n            // Only applies to object-fit images.\n            if (!src || $(this).css('objectFit') !== 'cover') {\n                return;\n            }\n\n            imageElements.push({\n                element: $this,\n                url: src,\n                type: 'image',\n            });\n        });\n\n        // Browse through all image IDs.\n        for (var id in tstLoadedImages) {\n            var image = tstLoadedImages[id];\n\n            // Browse through all URLs.\n            for (var i = 0; i < image.urls.length; i++) {\n                var url = image.urls[i];\n\n                // Find elements using this URL.\n                for (var j = 0; j < imageElements.length; j++) {\n                    var imageElement = imageElements[j];\n\n                    // Search for URL directly.\n                    var found = imageElement.url.indexOf(url) !== -1;\n\n                    // Try to decode URL.\n                    if (!found) {\n                        try {\n                            if (decodeURIComponent(imageElement.url).indexOf(url) !== -1) {\n                                found = true;\n                            }\n                        } catch (e) {\n                        }\n                    }\n\n                    if (found) {\n                        var x = image.focusPointX * 100 + '%';\n                        var y = image.focusPointY * 100 + '%';\n\n                        if (imageElement.type === 'background') {\n                            imageElement.element\n                                .css('background-position-x', x)\n                                .css('background-position-y', y);\n                        } else if (imageElement.type === 'image') {\n                            imageElement.element.css('object-position', x + ' ' + y);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    if (typeof tstLoadedImages !== 'undefined') {\n        tst.adjustBackgroundImages(tstLoadedImages);\n    }\n});\n"]}